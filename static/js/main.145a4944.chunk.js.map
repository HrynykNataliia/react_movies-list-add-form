{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","imdbId","getErrorNameHelper","name","toUpperCase","slice","NewMovie","state","hasTitleError","hasImgUrlError","hasImdbUrlError","hasImdbIdError","validateTextField","validName","trim","setState","validateUrlField","test","validateForm","validTitle","validImdbId","validImgUrl","validImdbUrl","isButtonDisabled","createNewMovie","clearForm","handleChange","event","target","value","handleSubmit","preventDefault","newMovie","props","onAdd","this","onSubmit","type","onChange","placeholder","classNames","onBlur","disabled","Component","App","moviesFromServer","addMovie","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.145a4944.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title, description, imgUrl, imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","import { Component } from 'react';\nimport classNames from 'classnames';\n\nimport './NewMovie.scss';\n\ntype Props = {\n  onAdd: (movie: Movie) => void,\n};\n\ntype State = {\n  title: string,\n  description: string,\n  imgUrl: string,\n  imdbUrl: string,\n  imdbId: string,\n  hasTitleError: boolean,\n  hasImgUrlError: boolean,\n  hasImdbUrlError: boolean,\n  hasImdbIdError: boolean,\n};\n\nconst getErrorNameHelper = (name: string): string => `has${name[0].toUpperCase()}${name.slice(1)}Error`;\n\nexport class NewMovie extends Component<Props, State> {\n  state: State = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n    hasTitleError: false,\n    hasImgUrlError: false,\n    hasImdbUrlError: false,\n    hasImdbIdError: false,\n  };\n\n  validateTextField = (name: string): boolean => {\n    const validName = name as 'title' | 'imdbId';\n\n    if (this.state[validName].trim() === '') {\n      this.setState({\n        [getErrorNameHelper(name)]: true,\n      } as Pick<State, 'hasTitleError' | 'hasImdbIdError'>);\n\n      return false;\n    }\n\n    return true;\n  };\n\n  validateUrlField = (name: string): boolean => {\n    const validName = name as 'imgUrl' | 'imdbUrl';\n\n    if (\n      !/^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/\n        .test(this.state[validName])\n    ) {\n      this.setState({\n        [getErrorNameHelper(name)]: true,\n      } as Pick<State, 'hasImgUrlError' | 'hasImdbUrlError'>);\n\n      return false;\n    }\n\n    return true;\n  };\n\n  validateForm = (): boolean => {\n    const validTitle = this.validateTextField('title');\n    const validImdbId = this.validateTextField('imdbId');\n    const validImgUrl = this.validateUrlField('imgUrl');\n    const validImdbUrl = this.validateUrlField('imdbUrl');\n\n    return validTitle\n      && validImdbId\n      && validImgUrl\n      && validImdbUrl;\n  };\n\n  isButtonDisabled = (): boolean => {\n    const {\n      hasTitleError,\n      hasImdbIdError,\n      hasImgUrlError,\n      hasImdbUrlError,\n    } = this.state;\n\n    return hasTitleError || hasImdbIdError || hasImgUrlError || hasImdbUrlError;\n  };\n\n  createNewMovie = (): Movie => ({ ...this.state });\n\n  clearForm = () => {\n    this.setState({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    });\n  };\n\n  handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = event.target;\n\n    this.setState({\n      [name]: value,\n      [getErrorNameHelper(name)]: false,\n    } as Pick<State, keyof State>);\n  };\n\n  handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n    if (this.validateForm()) {\n      const newMovie = this.createNewMovie();\n\n      this.props.onAdd(newMovie);\n      this.clearForm();\n    }\n  };\n\n  render() {\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n      hasTitleError,\n      hasImgUrlError,\n      hasImdbUrlError,\n      hasImdbIdError,\n    } = this.state;\n\n    return (\n      <form\n        onSubmit={this.handleSubmit}\n        className=\"form\"\n      >\n        <div className=\"field\">\n          <input\n            type=\"text\"\n            name=\"title\"\n            value={title}\n            onChange={this.handleChange}\n            placeholder=\"Enter a title\"\n            className={classNames('input is-warning', { 'is-danger': hasTitleError })}\n            onBlur={(event) => this.validateTextField(event.target.name)}\n          />\n          {hasTitleError && (<p className=\"help is-danger\">Please, enter a valid title</p>)}\n        </div>\n\n        <div className=\"field\">\n          <input\n            type=\"text\"\n            name=\"description\"\n            value={description}\n            onChange={this.handleChange}\n            placeholder=\"Enter a description\"\n            className=\"input is-warning\"\n          />\n        </div>\n\n        <div className=\"field\">\n          <input\n            type=\"text\"\n            name=\"imgUrl\"\n            value={imgUrl}\n            onChange={this.handleChange}\n            placeholder=\"Enter a imgUrl\"\n            className={classNames('input is-warning', { 'is-danger': hasImgUrlError })}\n            onBlur={(event) => this.validateUrlField(event.target.name)}\n          />\n          {hasImgUrlError && (<p className=\"help is-danger\">Please, enter a valid imgUrl</p>)}\n        </div>\n\n        <div className=\"field\">\n          <input\n            type=\"text\"\n            name=\"imdbUrl\"\n            value={imdbUrl}\n            onChange={this.handleChange}\n            placeholder=\"Enter a imdbUrl\"\n            className={classNames('input is-warning', { 'is-danger': hasImdbUrlError })}\n            onBlur={(event) => this.validateUrlField(event.target.name)}\n          />\n          {hasImdbUrlError && (<p className=\"help is-danger\">Please, enter a valid imdbUrl</p>)}\n        </div>\n\n        <div className=\"field\">\n          <input\n            type=\"text\"\n            name=\"imdbId\"\n            value={imdbId}\n            onChange={this.handleChange}\n            placeholder=\"Enter a imdbId\"\n            className={classNames('input is-warning', { 'is-danger': hasImdbIdError })}\n            onBlur={(event) => this.validateTextField(event.target.name)}\n          />\n          {hasImdbIdError && (<p className=\"help is-danger\">Please, enter a valid imdbId</p>)}\n        </div>\n\n        <button\n          type=\"submit\"\n          className=\"button is-warning\"\n          disabled={this.isButtonDisabled()}\n        >\n          Add\n        </button>\n      </form>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\ninterface State {\n  movies: Movie[];\n}\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie: Movie) => {\n    this.setState(({ movies }) => ({\n      movies: [...movies, movie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <h1 className=\"title\">Add a new movie</h1>\n          <NewMovie onAdd={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}